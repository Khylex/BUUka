{"ast":null,"code":"var _jsxFileName = \"/home/tenshi/Desktop/BUUka/src/Components/Wallet/AddCardForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Cards from 'react-credit-cards';\nimport Styles from \"./css/styles.module.css\";\nimport 'react-credit-cards/es/styles-compiled.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddCardForm = _ref => {\n  _s();\n\n  let {\n    handleCardForm\n  } = _ref;\n  //initialize the values\n  const initialValues = {\n    name: \"\",\n    cardNo: \"\",\n    expiryDate: \"\",\n    cvc: \"\",\n    cardtype: \"\"\n  }; //get states\n\n  const [formValues, setFormValues] = useState(initialValues); //focus for react card package\n\n  const [focus, setFocus] = useState(\"\"); //for errors when the user types\n\n  const [errors, setErrors] = useState({}); //flag\n\n  const [isSubmit, SetIsSubmit] = useState(false); //handle onchange events for each form\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n    typeOfCard(formValues.cardNo);\n  };\n\n  const [visa, setVisa] = useState(false);\n  const [mastercard, setMasterCard] = useState(false);\n  const cardImage = React.useCallback(() => {\n    if (formValues.cardtype === \"Visa\") {\n      setVisa(true);\n    } else if (formValues.cardtype === \"MasterCard\") {\n      setMasterCard(true);\n    } else {\n      setVisa(false);\n      setMasterCard(false);\n    }\n  }, [formValues]);\n  React.useEffect(() => {\n    cardImage();\n  }, [cardImage]);\n  useEffect(() => {\n    //console.log(errors)\n    if (Object.keys(errors).length === 0 && isSubmit) {\n      console.log(formValues);\n    } // if(formValues) {\n    //    cardImage();\n    //  }\n\n  }, [errors, formValues, isSubmit, cardImage]); //type of card \n\n  const typeOfCard = value => {\n    let type = \"\"; //Cardtype regex\n\n    const visaRegEx = new RegExp(\"^(?:4[0-9]{12}(?:[0-9]{3})?)$\");\n    const mastercardRegEx = new RegExp(\"^(?:5[1-5][0-9]{14})$\");\n    const amexpRegEx = new RegExp(\"^(?:3[47][0-9]{13})$\");\n    const discovRegEx = new RegExp(\"^(?:6(?:011|5[0-9][0-9])[0-9]{12})$\");\n\n    if (visaRegEx.test(value)) {\n      type = \"Visa\";\n    } else if (value.startsWith(4)) {\n      type = \"Visa\";\n    } else if (value.startsWith(51) || value.startsWith(52) || value.startsWith(53) || value.startsWith(54) || value.startsWith(55)) {\n      type = \"MasterCard\";\n    } else if (mastercardRegEx.test(value)) {\n      type = \"MasterCard\";\n    } else if (amexpRegEx.test(value)) {\n      type = \"American Express\";\n    } else if (discovRegEx.test(value)) {\n      type = \"Discovery\";\n    } else {\n      type = \"Invalid\";\n    }\n\n    formValues.cardtype = type;\n    return type;\n  };\n\n  typeOfCard(formValues.cardNo); //validate data on the frontend\n\n  const validate = values => {\n    //email regex \n    //const emailRegex = new RegExp(\"^(w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+)$\")\n    const errors = {}; //regex for expiry date\n\n    const pattern = new RegExp(\"^(0[1-9]|1[0-2]|[1-9])/(1[4-9]|[2-9][0-9]|20[1-9][1-9])$\"); //regex for cvc\n\n    const cvcPattern = new RegExp(\"^([0-9]{3,4})$\"); //Cardtype regex\n\n    const visaRegEx = new RegExp(\"^(?:4[0-9]{12}(?:[0-9]{3})?)$\");\n    const mastercardRegEx = new RegExp(\"^(?:5[1-5][0-9]{14})$\");\n    const amexpRegEx = new RegExp(\"^(?:3[47][0-9]{13})$\");\n    const discovRegEx = new RegExp(\"^(?:6(?:011|5[0-9][0-9])[0-9]{12})$\");\n\n    if (!values.name) {\n      errors.name = \"Name is required\";\n    }\n\n    if (!values.cardNo) {\n      errors.cardNo = \"Card Number  is required\";\n    } else if (!(visaRegEx.test(values.cardNo) || mastercardRegEx.test(values.cardNo) || amexpRegEx.test(values.cardNo) || discovRegEx.test(values.cardNo))) {\n      errors.cardNo = \"Card Number is invalid\";\n    }\n\n    if (!values.expiryDate) {\n      errors.expiryDate = \"Expiry Date is required\";\n    } else if (!pattern.test(values.expiryDate)) {\n      errors.expiryDate = \"expiry date do not match the requested format\";\n    }\n\n    if (!values.cvc) {\n      errors.cvc = \"Cvc is required\";\n    } else if (!cvcPattern.test(values.cvc)) {\n      errors.cvc = \"Cvc does not match the requested format\";\n    }\n\n    return errors;\n  }; //handle form submission\n\n\n  const handleForm = async e => {\n    e.preventDefault();\n    setErrors(validate(formValues));\n    SetIsSubmit(true);\n\n    if (Object.keys(errors).length === 0 && isSubmit) {\n      await fetch('http://localhost:8000/cardDetails', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(formValues, undefined, 2)\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Styles.AddCardForm,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleForm,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCardForm,\n        type: \"button\",\n        className: Styles.ball,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTimes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 89\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Styles.cardo,\n        children: /*#__PURE__*/_jsxDEV(Cards, {\n          name: formValues.name,\n          number: formValues.cardNo,\n          expiry: formValues.expiryDate,\n          cvc: formValues.cvc,\n          focused: focus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add new card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), Object.keys(errors).length === 0 && isSubmit ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Styles.success,\n        children: \"Card Details Added sucessfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 66\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Styles.big,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cardName\",\n          children: \"Card holder full name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: formValues.name,\n          onChange: handleChange,\n          name: \"name\",\n          id: \"cardName\",\n          placeholder: \"Add card holder full name\",\n          onFocus: e => setFocus(e.target.name)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: Styles.error,\n        children: errors.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Styles.big,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cardNo\",\n          children: \"Card number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: formValues.cardNo,\n          onChange: handleChange,\n          name: \"cardNo\",\n          id: \"cardNo\",\n          placeholder: \"Credit or debit card number\",\n          onFocus: e => setFocus(e.target.name)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), errors.cardNo && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: Styles.error,\n          children: errors.cardNo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Styles.frame,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"date\",\n            children: \"Expiry date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: formValues.expiryDate,\n            onChange: handleChange,\n            name: \"expiryDate\",\n            id: \"date\",\n            placeholder: \"MM / YY\",\n            onFocus: e => setFocus(e.target.name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this), errors.expiryDate && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: Styles.error,\n            children: errors.expiryDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 51\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cvc\",\n            children: \"CVC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: formValues.cvc,\n            onChange: handleChange,\n            name: \"cvc\",\n            id: \"cvc\",\n            placeholder: \"cvc\",\n            onFocus: e => setFocus(e.target.name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this), errors.cvc && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: Styles.error,\n            children: errors.cvc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Styles.burn,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Pay securely with \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this), visa && /*#__PURE__*/_jsxDEV(\"img\", {\n          className: Styles.visa,\n          src: \"./visa.png\",\n          alt: \"Visa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 30\n        }, this), mastercard && /*#__PURE__*/_jsxDEV(\"img\", {\n          className: Styles.ms,\n          src: \"./ms.png\",\n          alt: \"MasterCard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Styles.btns,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCardForm,\n          type: \"button\",\n          className: Styles.cancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: Styles.save,\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddCardForm, \"1B87p1M3Mzxk8jg8n8oAh5Ax18w=\");\n\n_c = AddCardForm;\nexport default AddCardForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCardForm\");","map":{"version":3,"sources":["/home/tenshi/Desktop/BUUka/src/Components/Wallet/AddCardForm.js"],"names":["React","useState","useEffect","Cards","Styles","FontAwesomeIcon","faTimes","AddCardForm","handleCardForm","initialValues","name","cardNo","expiryDate","cvc","cardtype","formValues","setFormValues","focus","setFocus","errors","setErrors","isSubmit","SetIsSubmit","handleChange","e","value","target","typeOfCard","visa","setVisa","mastercard","setMasterCard","cardImage","useCallback","Object","keys","length","console","log","type","visaRegEx","RegExp","mastercardRegEx","amexpRegEx","discovRegEx","test","startsWith","validate","values","pattern","cvcPattern","handleForm","preventDefault","fetch","method","headers","body","JSON","stringify","undefined","ball","cardo","success","big","error","frame","burn","ms","btns","cancel","save"],"mappings":"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","sourcesContent":["import React,{ useState, useEffect } from \"react\"\nimport Cards from 'react-credit-cards';\nimport Styles from \"./css/styles.module.css\";\nimport 'react-credit-cards/es/styles-compiled.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes} from '@fortawesome/free-solid-svg-icons'\nconst AddCardForm = ({handleCardForm}) => {\n    //initialize the values\n    const initialValues = {\n        name: \"\",\n        cardNo: \"\",\n        expiryDate: \"\",\n        cvc: \"\",\n        cardtype: \"\"\n    }\n\n    //get states\n    const [formValues, setFormValues] = useState(initialValues);\n    //focus for react card package\n    const [focus, setFocus] = useState(\"\");\n    //for errors when the user types\n    const [errors, setErrors] = useState({});\n    //flag\n    const [isSubmit, SetIsSubmit] = useState(false);\n\n    //handle onchange events for each form\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormValues({ ...formValues, [name]: value});\n        typeOfCard(formValues.cardNo);\n    };\n\n    const [visa, setVisa] = useState(false);\n    const [mastercard, setMasterCard] = useState(false);\n\n    const cardImage = React.useCallback(() => {\n        if(formValues.cardtype === \"Visa\"){\n            setVisa(true)\n        }else if (formValues.cardtype === \"MasterCard\"){\n            setMasterCard(true);\n        }\n        else {\n            setVisa(false);\n            setMasterCard(false);\n        }\n    }, [formValues])\n    React.useEffect(() => {\n        cardImage()\n      }, [cardImage]);\n\n    useEffect(()=> {\n        //console.log(errors)\n        if(Object.keys(errors).length === 0 && isSubmit){\n            console.log(formValues)\n        }\n        // if(formValues) {\n        //    cardImage();\n        //  }\n        \n    }, [errors, formValues, isSubmit, cardImage]);\n\n    //type of card \n    const typeOfCard = (value) => {\n        let type = \"\";\n        //Cardtype regex\n        const visaRegEx = new RegExp(\"^(?:4[0-9]{12}(?:[0-9]{3})?)$\");\n        const mastercardRegEx = new RegExp(\"^(?:5[1-5][0-9]{14})$\");\n        const amexpRegEx = new RegExp(\"^(?:3[47][0-9]{13})$\");\n        const discovRegEx = new RegExp(\"^(?:6(?:011|5[0-9][0-9])[0-9]{12})$\"); \n\n        if(visaRegEx.test(value)){\n            type = \"Visa\";\n        }else if(value.startsWith(4)){\n            type = \"Visa\";\n        }else if(value.startsWith(51) || \n        value.startsWith(52) ||\n        value.startsWith(53) ||\n        value.startsWith(54) ||\n        value.startsWith(55)\n        ){\n            type = \"MasterCard\";\n        }\n        else if(mastercardRegEx.test(value)){\n            type = \"MasterCard\";\n        }else if(amexpRegEx.test(value)){\n            type = \"American Express\";\n        }else if(discovRegEx.test(value)){\n            type = \"Discovery\";\n        }else {\n            type = \"Invalid\";\n        }\n\n        formValues.cardtype = type;\n        return type;\n    }\n\n    typeOfCard(formValues.cardNo);\n\n    //validate data on the frontend\n    const validate = (values) => {\n        //email regex \n        //const emailRegex = new RegExp(\"^(w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+)$\")\n        const errors = {};\n        //regex for expiry date\n        const pattern = new RegExp(\"^(0[1-9]|1[0-2]|[1-9])/(1[4-9]|[2-9][0-9]|20[1-9][1-9])$\");\n        //regex for cvc\n        const cvcPattern = new RegExp(\"^([0-9]{3,4})$\");\n\n        //Cardtype regex\n        const visaRegEx = new RegExp(\"^(?:4[0-9]{12}(?:[0-9]{3})?)$\");\n        const mastercardRegEx = new RegExp(\"^(?:5[1-5][0-9]{14})$\");\n        const amexpRegEx = new RegExp(\"^(?:3[47][0-9]{13})$\");\n        const discovRegEx = new RegExp(\"^(?:6(?:011|5[0-9][0-9])[0-9]{12})$\"); \n\n\n        if(!values.name){\n            errors.name = \"Name is required\";\n        }\n        if(!values.cardNo){\n            errors.cardNo = \"Card Number  is required\";\n        }\n        else if(!(visaRegEx.test(values.cardNo) || mastercardRegEx.test(values.cardNo) || amexpRegEx.test(values.cardNo) || discovRegEx.test(values.cardNo)) ){\n            errors.cardNo = \"Card Number is invalid\"\n        }\n        if(!values.expiryDate){\n            errors.expiryDate = \"Expiry Date is required\";\n        }else if(!pattern.test(values.expiryDate)){\n            errors.expiryDate = \"expiry date do not match the requested format\";\n        }\n        if(!values.cvc){\n            errors.cvc = \"Cvc is required\";\n        }else if(!cvcPattern.test(values.cvc)){\n            errors.cvc = \"Cvc does not match the requested format\";\n        }\n        return errors;\n    }\n\n    //handle form submission\n    const handleForm = async (e) => {\n        e.preventDefault();\n        setErrors(validate(formValues));\n        SetIsSubmit(true);\n        if(Object.keys(errors).length === 0 && isSubmit){\n            await fetch('http://localhost:8000/cardDetails', {\n                method: 'POST',\n                headers: {\n                'Content-type': 'application/json',\n                },\n                body: JSON.stringify(formValues, undefined, 2),\n            })\n        }\n    }\n\n   \n    \n    \n\n    return (\n        <div className={Styles.AddCardForm}>\n            <form onSubmit= {handleForm}>\n                {/* <pre>{JSON.stringify(formValues, undefined, 2)}</pre> */}\n                <button onClick={handleCardForm} type=\"button\" className= {Styles.ball}><FontAwesomeIcon   icon={faTimes} /></button>\n                <div className = {Styles.cardo}>\n                    <Cards \n                        name= {formValues.name}\n                        number= {formValues.cardNo}\n                        expiry = {formValues.expiryDate}\n                        cvc = {formValues.cvc}\n                        focused = {focus}\n                    />\n                </div>\n                \n\n                <h3>Add new card</h3>\n                {Object.keys(errors).length === 0 && isSubmit ? (<div className={Styles.success}>Card Details Added sucessfully</div>) : \"\"}\n                <div className={Styles.big}>\n                    <label htmlFor=\"cardName\">Card holder full name</label>\n                    <input \n                        type=\"text\" \n                        value= {formValues.name} \n                        onChange={handleChange} \n                        name=\"name\" \n                        id=\"cardName\" \n                        placeholder=\"Add card holder full name\"\n                        onFocus= {e => setFocus(e.target.name)}\n                        />\n                </div>\n                { errors.name && <p className={Styles.error}>{errors.name}</p>}\n                <div className={Styles.big}>\n                    <label htmlFor=\"cardNo\">Card number</label>\n                    <input \n                        type=\"number\" \n                        value= {formValues.cardNo} \n                        onChange={handleChange} \n                        name=\"cardNo\" \n                        id=\"cardNo\" \n                        placeholder=\"Credit or debit card number\"\n                        onFocus= {e => setFocus(e.target.name)}\n                        />\n                  { errors.cardNo && <p className={Styles.error}>{errors.cardNo}</p>}  \n                </div>\n                <div className={Styles.frame}>\n                    <div>\n                        <label htmlFor=\"date\">Expiry date</label>\n                        <input \n                            type=\"text\" \n                            value= {formValues.expiryDate} \n                            onChange={handleChange} \n                            name=\"expiryDate\" \n                            id=\"date\" \n                            placeholder=\"MM / YY\"\n                            onFocus= {e => setFocus(e.target.name)}\n                            />\n                            {errors.expiryDate && <p className={Styles.error}>{errors.expiryDate}</p>}\n                    </div>\n                    <div>\n                        <label htmlFor=\"cvc\">CVC</label>\n                        <input  \n                            type=\"text\" \n                            value= {formValues.cvc} \n                            onChange={handleChange}  \n                            name=\"cvc\" \n                            id=\"cvc\" \n                            placeholder=\"cvc\"\n                            onFocus= {e => setFocus(e.target.name)}\n                            />\n                         {errors.cvc && <p className={Styles.error}>{errors.cvc}</p>}\n                    </div>\n                </div>\n                <div className= {Styles.burn}>\n                    <p>Pay securely with </p>\n                    {visa && <img className={Styles.visa} src=\"./visa.png\" alt=\"Visa\" />}\n                    {mastercard && <img className={Styles.ms} src=\"./ms.png\" alt=\"MasterCard\" />}\n                </div>\n                \n                <div className={Styles.btns}>\n                    <button onClick={handleCardForm} type=\"button\" className= {Styles.cancel}>Cancel</button>\n                    <button className = {Styles.save} type=\"submit\">Save</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default AddCardForm\n"]},"metadata":{},"sourceType":"module"}