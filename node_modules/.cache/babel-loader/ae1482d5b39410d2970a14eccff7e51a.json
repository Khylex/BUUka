{"ast":null,"code":"var _jsxFileName = \"/home/tenshi/Desktop/BUUka/src/Components/Settings/AddressForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faHome, faBriefcase, faBox } from '@fortawesome/free-solid-svg-icons';\nimport Styles from \"./css/styles.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddressForm = _ref => {\n  _s();\n\n  let {\n    handleAddressForm\n  } = _ref;\n  const initialValues = {\n    addressType: \"\",\n    address: \"\"\n  };\n  const [address, setAddress] = useState({\n    activeObject: null,\n    objects: [{\n      id: 1,\n      addressType: \"Home\"\n    }, {\n      id: 2,\n      addressType: \"Work\"\n    }, {\n      id: 3,\n      addressType: \"Others\"\n    }]\n  });\n  const [formValues, setFormValues] = useState(initialValues);\n  const [errors, setErrors] = useState({});\n\n  const handleActive = index => {\n    setAddress({ ...address,\n      activeObject: address.objects[index]\n    });\n    setFormValues({ ...formValues,\n      addressType: address.objects[index].addressType\n    });\n  };\n\n  const toggleClass = index => {\n    if (address.objects[index] === address.activeObject) {\n      return `${Styles.active}`;\n    } else {\n      return `${Styles.boxx}`;\n    }\n  };\n\n  const validate = values => {\n    const errors = {};\n\n    if (!values.addressType) {\n      errors.addressType = \"Please select an address type\";\n    }\n\n    if (!values.address) {\n      errors.address = \"Address field cannot be empty\";\n    } else if (values.length > 200) {\n      errors.address = \"Address is too long\";\n    }\n\n    return errors;\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setErrors(validate(formValues)); // if(Object.keys(errors).length === 0){\n    //     await fetch('http://localhost:8000/enpoint', {\n    //         method: 'POST',\n    //         headers: {\n    //         'Content-type': 'application/json',\n    //         },\n    //         body: JSON.stringify(formValues, undefined, 2),\n    //     })\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Styles.addressform,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: Styles.cancel,\n        onClick: handleAddressForm,\n        type: \"button\",\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTimes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 95\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Styles.type,\n        children: address.objects.map((address, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleActive(index),\n          className: toggleClass(index),\n          children: [address.addressType === \"Home\" ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: Styles.icon,\n            icon: faHome\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 63\n          }, this) : \"\", address.addressType === \"Work\" ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: Styles.icon,\n            icon: faBriefcase\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 63\n          }, this) : \"\", address.addressType === \"Others\" ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: Styles.icon,\n            icon: faBox\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 64\n          }, this) : \"\", /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: address.addressType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Styles.new,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"textarea\",\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"address\",\n          id: \"textarea\",\n          cols: \"30\",\n          rows: \"10\",\n          maxLength: 200,\n          defaultValue: formValues.address,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), errors.address && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: Styles.errors,\n          children: errors.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 40\n        }, this), errors.addressType && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: Styles.errors,\n          children: errors.addressType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Styles.bottom,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleAddressForm,\n          className: Styles.cancell,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: Styles.save,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddressForm, \"AgAdRWEgVsWhlxEqJlZ+qtGz6vE=\");\n\n_c = AddressForm;\nexport default AddressForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddressForm\");","map":{"version":3,"sources":["/home/tenshi/Desktop/BUUka/src/Components/Settings/AddressForm.js"],"names":["useState","FontAwesomeIcon","faTimes","faHome","faBriefcase","faBox","Styles","AddressForm","handleAddressForm","initialValues","addressType","address","setAddress","activeObject","objects","id","formValues","setFormValues","errors","setErrors","handleActive","index","toggleClass","active","boxx","validate","values","length","handleChange","e","name","value","target","handleSubmit","preventDefault","addressform","cancel","type","map","icon","new","bottom","cancell","save"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faHome, faBriefcase, faBox} from '@fortawesome/free-solid-svg-icons';\nimport Styles from \"./css/styles.module.css\";\nconst AddressForm = ({handleAddressForm}) => {\n    const initialValues = {\n        addressType : \"\",\n        address : \"\"\n    }\n\n    const [address, setAddress] = useState({\n        activeObject: null,\n        objects: [{id:1, addressType: \"Home\"}, \n                  {id:2, addressType: \"Work\"}, \n                  {id:3, addressType: \"Others\"}\n                ]\n    })\n\n    const [formValues, setFormValues] = useState(initialValues);\n    const [errors, setErrors] = useState({});\n\n    \n    const handleActive = (index) =>{\n        setAddress({...address, activeObject: address.objects[index]});\n        setFormValues({...formValues, addressType: address.objects[index].addressType});\n    }\n\n    const toggleClass = (index) => {\n        if(address.objects[index] === address.activeObject){\n            return `${Styles.active}`;\n        }else {\n            return `${Styles.boxx}`;\n        }\n    }\n\n    const validate = (values) => {\n        const errors = {};\n        if(!values.addressType) {\n            errors.addressType = \"Please select an address type\";\n        } if(!values.address){\n            errors.address = \"Address field cannot be empty\";\n        }else if(values.length > 200){\n            errors.address = \"Address is too long\";\n        }\n        return errors;\n    }\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormValues({ ...formValues, [name]: value});\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setErrors(validate(formValues));\n        // if(Object.keys(errors).length === 0){\n        //     await fetch('http://localhost:8000/enpoint', {\n        //         method: 'POST',\n        //         headers: {\n        //         'Content-type': 'application/json',\n        //         },\n        //         body: JSON.stringify(formValues, undefined, 2),\n        //     })\n        // }\n    }\n\n    return (\n        <div className={Styles.addressform}>\n            <form onSubmit={handleSubmit}>\n                 {/* <pre>{JSON.stringify(formValues, undefined, 2)}</pre> */}\n                <button className={Styles.cancel} onClick={handleAddressForm} type = \"button\"><FontAwesomeIcon icon={faTimes} /></button>\n                <h3>Edit address</h3>\n                <div className={Styles.type}>\n                    { address.objects.map((address, index)=> (\n                        <div key={index} onClick = {() => handleActive(index)} className = {toggleClass(index)}>\n                            {address.addressType === \"Home\" ? <FontAwesomeIcon className={Styles.icon} icon={faHome} /> : \"\"}\n                            {address.addressType === \"Work\" ? <FontAwesomeIcon className={Styles.icon} icon={faBriefcase} />: \"\"}\n                            {address.addressType === \"Others\" ?<FontAwesomeIcon className={Styles.icon} icon={faBox} /> : \"\"}\n                            <h4>{address.addressType}</h4>\n                        </div> \n                    ))}\n                </div>\n                <div className={Styles.new}>\n                    <label htmlFor=\"textarea\">Address</label>\n                    <textarea name=\"address\" id=\"textarea\" cols=\"30\" rows=\"10\" maxLength={200}  defaultValue={formValues.address} onChange={handleChange}></textarea>\n                    {errors.address && <p className={Styles.errors}>{errors.address}</p> }\n                    {errors.addressType && <p className={Styles.errors}>{errors.addressType}</p> }\n                </div>\n                <div className={Styles.bottom}>\n                    <button type=\"button\" onClick={handleAddressForm} className={Styles.cancell}>Cancel</button>\n                    <button type=\"submit\" className={Styles.save}>Save</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default AddressForm\n"]},"metadata":{},"sourceType":"module"}